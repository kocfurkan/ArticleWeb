@model IEnumerable<Article_Entities.Note>

@{
    ViewBag.Title = "Index";
}


<div class="container">
    <div class="row">

        <div class="col-md-12">
            <h2>Notes</h2>
            <p>
            <p> @_CustomHelpers.LinkButton("Create New", "/Note/Create", "create", "Create Note", "primary")</p>

            <table class="table">
                <tr>
                    <th>
                        @Html.DisplayNameFor(model => model.User.Name)
                    </th>
                    <th>
                        @Html.DisplayNameFor(model => model.Category.Title)
                    </th>
                    <th>
                        @Html.DisplayNameFor(model => model.Title)
                    </th>
                    <th>
                        @Html.DisplayNameFor(model => model.Text)
                    </th>
                    <th>
                        @Html.DisplayNameFor(model => model.Draft)
                    </th>
                    <th>
                        @Html.DisplayNameFor(model => model.LikeNumber)
                    </th>
                    <th>
                        @Html.DisplayNameFor(model => model.RegisterationDate)
                    </th>
                    <th>
                        @Html.DisplayNameFor(model => model.UpdateDate)
                    </th>
                    <th>
                        @Html.DisplayNameFor(model => model.UpdatedBy)
                    </th>
                    <th></th>
                </tr>

                @foreach (var item in Model)
                {
                    <tr>
                        <td>
                            @Html.DisplayNameFor(modelItem => modelItem.User.Username)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.Category.Title)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.Title)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.Text)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.Draft)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.LikeNumber)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.RegisterationDate)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.UpdateDate)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.UpdatedBy)
                        </td>
                        <td>
                            @Html.ActionLink("Edit", "Edit", new { id = item.Id }, new { @class = "btn btn-primary" }) |
                            @Html.ActionLink("Details", "Details", new { id = item.Id }, new { @class = "btn btn-primary" }) |
                            @Html.ActionLink("Delete", "Delete", new { id = item.Id }, new { @class = "btn btn-primary" })
                            <p><button class="btn btn-primary " data-target="#modal1" data-toggle="modal" data-noteId="@item.Id"><span class="glyphicon glyphicon-comment" style="margin-right:0.3rem"></span>Comments</button></p>
                            <p>
                        </td>
                    </tr>
                }

            </table>
        </div>
    </div>
</div>


@_CustomHelpers.Modal("modal1", "Comments")

@*Script runs after the modal has opened*@

<script>
    var noteId = -1;

    $(function () {
        $('#modal1').on('show.bs.modal', function (e) {


            var button = $(e.relatedTarget);
            noteId = button.data("noteid");
            console.log(button.text);
            $('#modal1_body').load("/Comment/ShowComment/" + noteId);

        });
    });

    const editComment = (btn, process, commentid, commenttext) => {
        var button = $(btn);
        var editmode = button.data("edit");

        if (process === "update") {
            if (!editmode) {
                button.data("edit", true)
                button.removeClass("btn-primary");
                button.addClass("btn-info");

                $(commenttext).attr("contenteditable", true);
                $(commenttext).focus();
            }
            else {
                button.data("edit", false)
                button.removeClass("btn-info");
                button.addClass("btn-primary");

                $(commenttext).attr("contenteditable", false);

                var editedText = $(commenttext).text();
                $.ajax({
                    method: "POST",
                    url: "/Comment/Edit/" + commentid,
                    data: { text: editedText }
                }).done(function (data) {
                    if (data.result) {
                        $('#modal1_body').load("/Comment/ShowComment/" + noteId);
                    } else {
                        alert("Update Failed")
                    }
                }).fail(function () {
                    alert("Server Error")
                })
            }
        }
        else if (process === "delete") {
            var msg = confirm("Do You Want To Delete The Comment");
            if (!msg) {
                return false;
            }
            $.ajax({
                method: "GET",
                url: "/Comment/Delete/" + commentid
            }).done(function (data) {
                if (data.result) {
                    $('#modal1_body').load("/Comment/ShowComment/" + noteId);
                } else {
                    alert("Update Failed")
                }
            }).fail(function () {
                alert("Server Error")
            })
        }
        else if (process === "create") {

            var comment = $("#comment_text").val();
            $.ajax({
                method: "Post",
                url: "/Comment/Create",
                data: { Text: comment, noteId: noteId }
            }).done(function (data) {
                if (data.result) {
                    $('#modal1_body').load("/Comment/ShowComment/" + noteId);
                } else {
                    alert("Commenting Failed")
                }
            }).fail(function () {
                alert("Commenting Failed")
            });
        }
    }
</script>
